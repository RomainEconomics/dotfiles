

docker_rm() {
  docker stop $1 && docker rm $1
}

git_add_reset_fzf() {
  git status -s | 
    fzf -m \
        --preview 'bat --color=always --line-range :500 {2}' \
        --bind "ctrl-a:execute(git add {2})+reload(git status -s)" \
        --bind "ctrl-r:execute(git reset {2})+reload(git status -s)" \
        --header "Press ALT-A to add, ALT-R to reset"
}

interactive_word_finder() {
  rg \
      $1 \
      -i \
      --line-number \
      --color=always \
      --field-match-separator ' ' |
      fzf \
          --ansi \
          --preview 'bat --highlight-line {2} --color=always {1}' \
          --preview-window '+{2}-5' |
      awk -F ' ' '{ print $1 ":" $2 }' |
      xargs --no-run-if-empty code -g
}

git_checkout_fzf() {
  git branch \
  --color=always \
  --sort=-committerdate \
  --format='%(color:blue)%(committerdate:relative) %(color:yellow)%(refname:short) %(color:black)%(authorname)' | 
  fzf \
    --ansi \
    --preview 'git log {4} --oneline --graph --date=short --color=always' \
    --header Checkout |
    awk -F " " '{print $4}' |
    xargs git checkout
}

extract() {
    case $1 in
        *.tar.gz|*.tgz) tar xzvf "$1" ;;
        *.tar.xz) tar Jxvf "$1" ;;
        *.zip) unzip "$1" ;;
        *.lzh) lha e "$1" ;;
        *.tar.bz2|*.tbz) tar xjvf "$1" ;;
        *.tar.Z) tar zxvf "$1" ;;
        *.gz) gzip -d "$1" ;;
        *.bz2) bzip2 -dc "$1" ;;
        *.Z) uncompress "$1" ;;
        *.tar) tar xvf "$1" ;;
        *.arj) unarj "$1" ;;
        *) echo "'$1' cannot be extracted via extract()" ;;
    esac
}


cheat_sheet() {
    folder=~/Documents/repos/cheat-sheet/cheat_sheet/

    pushd $folder > /dev/null && \ 
     fd . -t "file" |
     fzf --ansi --preview 'glow {1} --style dark' |
     xargs --no-run-if-empty glow --style dark
    popd > /dev/null
}


# Yazi
function ya() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}
